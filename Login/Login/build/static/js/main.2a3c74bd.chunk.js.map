{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","handleuserChange","event","setState","username","target","value","handlesubmit","preventDefault","handlepassChange","password","handleemail","email","state","this","style","textAlign","onSubmit","action","type","name","onChange","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAmDeA,E,kDAhDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAQVC,iBAAmB,SAACC,GAChB,EAAKC,SAAS,CACVC,SAAWF,EAAMG,OAAOC,SAXX,EAerBC,aAAe,SAACL,GAEZA,EAAMM,kBAjBW,EAoBrBC,iBAAmB,SAACP,GAChB,EAAKC,SAAS,CACVO,SAASR,EAAMG,OAAOC,SAtBT,EAyBrBK,YAAc,SAACT,GACX,EAAKC,SAAS,CACVS,MAAMV,EAAMG,OAAOC,SAxBvB,EAAKO,MAAQ,CACRT,SAAS,GACTM,SAAS,GACTE,MAAM,IANM,E,0CA+BnB,WACE,MAAsCE,KAAKD,MAApCT,EAAP,EAAOA,SAASM,EAAhB,EAAgBA,SAChB,OACE,qBAAKK,MAAO,CAACC,UAAU,UAAvB,SACE,uBAAMC,SAAUH,KAAKP,aAAcW,OAAO,mBAA1C,UACE,uCACF,+CACA,uBAAOC,KAAK,OAAOC,KAAM,WAAWd,MAAOF,EAAUiB,SAAUP,KAAKb,mBAAmB,uBACvF,+CACA,uBAAOkB,KAAK,WAAWC,KAAM,WAAWd,MAAOI,EAAUW,SAAUP,KAAKL,mBAAmB,uBAC3F,wBAAQU,KAAK,SAAb,2B,GA1CUG,IAAMC,WCUTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2a3c74bd.chunk.js","sourcesContent":["import React from \"react\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n         username:'',\n         password:'',\n         email:''\n    }\n}\nhandleuserChange = (event) =>{\n    this.setState({\n        username : event.target.value\n    })\n}\n\nhandlesubmit = (event) =>{\n    //alert(`User xe${this.state.username} is a ${this.state.email}`)\n    event.preventDefault();\n    \n}\nhandlepassChange = (event) =>{\n    this.setState({\n        password:event.target.value\n    })\n}\nhandleemail = (event) =>{\n    this.setState({\n        email:event.target.value\n    })\n}\n  \n  render() {\n    const {username,password,/*email*/} = this.state\n    return (\n      <div style={{textAlign:\"center\"}}>\n        <form onSubmit={this.handlesubmit} action=\"loginProcess.php\">\n          <h2>Login</h2>\n        <label>Username: </label>\n        <input type=\"text\" name =\"userName\" value={username} onChange={this.handleuserChange}/><br/>\n        <label>Password: </label>\n        <input type=\"password\" name =\"passWord\" value={password} onChange={this.handlepassChange}/><br/>\n        <button type=\"submit\">Save</button>\n        </form>\n      </div>  \n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}